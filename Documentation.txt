SDL2 Réponses aux questions :

1. Simple DirectMedia Layer version 2 ou SDL2 est une bibliothèque logicielle, elle est utilisée pour créer des applications multimédias en 2D comme par exemple des jeux vidéos

2. La SDL2 permet de créer des application multimédias, elle peut gérer l'affichage vidéo, les evenement (pression d'une touche par exemple), l'audio, gestion de periphérique, lecture de CD audio, le multithreading, l'utilisation des timers

3. La SDL2 est utilisable sur plusieurs systèmes tel que Windows, Mac OS X, Linux, Android

4. Pour obtenir et installer la SDL2 il faut :

- Telecharger le fichier DLL et les libs sur le site de SDL (https://www.libsdl.org/download-2.0.php)
	RMQ : Pour une meilleure compatibilité il faut télécharger la version 32 bits

- Telecharger CodeBlocks si cela n'est pas deja fait

- Extraire le dossier lib SDL2 dans le dossier MinGW de CodeBlocks

- Créer un nouveau projet sur CodeBlocks (dans notre cas en C)

- Sur le projet aller dans "Build option"

- Dans l'onglet "Linker settings" ajouter les chemins suivants (Attention l'ordre est important):
	- ..\CodeBlocks\MinGW\lib\libmingw32.a
	- ..\CodeBlocks\MinGW\SDL2-2.0.12\i686-w64-mingw32\lib\libSDL2main.a
	- ..\CodeBlocks\MinGW\SDL2-2.0.12\i686-w64-mingw32\lib\libSDL2.dll.a

- Dans l'onglet "Search directories" :
	- Dans l'onglet "Compiler" ajouter le chemin include de la SDL2 ..\CodeBlocks\MinGW\SDL2-2.0.12\i686-w64-mingw32\include
	- Dans l'onglet "Linker" ajouter le chemin des libs de la SDL2 ..\CodeBlocks\MinGW\SDL2-2.0.12\i686-w64-mingw32\lib

- Dans le dossier du projet, glisser une copie de SDL2.dll

5. Voici les fonctionnalités les plus importantes dans la SDL 2.0 :

	accélération matérielle 3D complète
	support d'OpenGL 3.0 et supérieur
	support d'OpenGL ES
	support de multiples fenêtres
	support de multiples moniteurs
	support de multiples périphériques audio
	support d'Android et iOS
	bibliothèque de rendus simple 2D pouvant utiliser Direct3D, OpenGL, OpenGL ES ou un rendu logiciel
	retour de force disponible sur Windows, Mac OS X et Linux
	support de XInput et XAudio 2 pour Windows
	gestion de l'énergie (indique l'autonomie de la batterie, etc.)
	fenêtre aux formes personnalisées
	audio 32 bits
	bibliothèque simplifiée pour les manettes de jeu
	support du toucher (multi-touch, mouvements, etc.)
	meilleur support du mode plein écran
	meilleur support du clavier (scancodes VS keycodes, etc.)
	boîtes de messages
	support du presse-papier
	support basique du glisser/déposer
	support correct des entrées Unicode et IME

6. (Cf SDL2.c)

7. (Cf SDL2.c)

8. 
	SDL_CreateWindow() : Crée une fenêtre
	SDL_CreateWindowFrom() : Crée une fenêtre SDL à partir d'une fenêtre déjà existante
	SDL_DestroyWindow() : Détruit une fenêtre
	SDL_GetWindowData() : Récupère les données utilisateur associées à la fenêtre
	SDL_GetWindowFlags() : Récupère les options actuelles de la fenêtre
	SDL_GetWindowGrab() : Détermine si la fenêtre a le focus clavier
	SDL_GetWindowPosition() : Récupère la position actuelle de la fenêtre
	SDL_GetWindowSize() : Récupère la taille actuelle de la fenêtre
	SDL_GetWindowTitle() : Récupère le titre actuel de la fenêtre
	SDL_HideWindow() : Cache la fenêtre
	SDL_MaximizeWindow() : Agrandit la fenêtre
	SDL_MinimizeWindow() : Réduit la fenêtre dans la barre des tâches
	SDL_RaiseWindow() : Place la fenêtre devant les autres
	SDL_RestoreWindow() : Restaure la taille et la position d'une fenêtre minimisée ou maximisée
	SDL_SetWindowData() : Définit les données utilisateur de la fenêtre
	SDL_SetWindowFullscreen() : Passe la fenêtre en plein écran
	SDL_SetWindowGrab() : Donne le focus clavier à cette fenêtre
	SDL_SetWindowIcon() : Définit l'icône de la fenêtre
	SDL_SetWindowPosition() : Définit la position de la fenêtre
	SDL_SetWindowSize() : Définit la taille de la fenêtre
	SDL_SetWindowBordered() : Définit l'affichage des bordures de la fenêtre
	SDL_SetWindowTitle() : Définit le titre de la fenêtre
	SDL_ShowWindow() : Affiche la fenêtre

9. Un Renderer est un moteur de rendu, il servira a afficher les elements sur notre fenetre

10. SDL_Point sert a créer un point en 2D, et SDL_Rect sert a créer une forme rectangulaire, ce sont tous les deux des types

11. On gère la couleur avec la fonction SDL_Color qui attend comme parametre une couleur rouge(0-255) vert (0-255) bleu (0-255) et une transparence (0-255), on peut utiliser la fonction SDL_SetRenderDrawColor pour definir une couleur pour dessiner

12. (Cf SDL2.c)

13. (Cf SDL2.c)